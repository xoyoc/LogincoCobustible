name: Monthly Fuel Report

on:
  schedule:
    # Ejecutar el primer d√≠a de cada mes a las 9:00 AM UTC (4:00 AM M√©xico)
    - cron: '0 9 1 * *'
  workflow_dispatch: # Permitir ejecuci√≥n manual
    inputs:
      test_mode:
        description: 'Modo test (no enviar realmente)'
        required: false
        default: false
        type: boolean
      month:
        description: 'Mes espec√≠fico (1-12)'
        required: false
        default: ''
        type: string
      year:
        description: 'A√±o espec√≠fico'
        required: false
        default: ''
        type: string

jobs:
  send-report:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Set up environment variables
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DJANGO_DB_URL: ${{ secrets.DJANGO_DB_URL }}
        DO_SPACES_ACCESS_KEY: ${{ secrets.DO_SPACES_ACCESS_KEY }}
        DO_SPACES_SECRET_KEY: ${{ secrets.DO_SPACES_SECRET_KEY }}
        DO_SPACES_BUCKET_NAME: ${{ secrets.DO_SPACES_BUCKET_NAME }}
        DO_SPACES_ENDPOINT_URL: ${{ secrets.DO_SPACES_ENDPOINT_URL }}
        DO_SPACES_REGION: ${{ secrets.DO_SPACES_REGION }}
        USE_SPACES: "True"
        WHATSAPP_PHONE_NUMBER_ID: ${{ secrets.WHATSAPP_PHONE_NUMBER_ID }}
        WHATSAPP_ACCESS_TOKEN: ${{ secrets.WHATSAPP_ACCESS_TOKEN }}
        WHATSAPP_VERIFY_TOKEN: ${{ secrets.WHATSAPP_VERIFY_TOKEN }}
        EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
        DEBUG: "False"
        ALLOWED_HOSTS: "localhost,127.0.0.1"
      run: |
        echo "Environment variables configured"
        
    - name: Run database migrations
      run: python manage.py migrate --noinput
      
    - name: Collect static files
      run: python manage.py collectstatic --noinput
      
    - name: Send monthly report
      run: |
        if [ "${{ inputs.test_mode }}" = "true" ]; then
          echo "üß™ Running in test mode..."
          python manage.py enviar_reporte_mensual --test
        elif [ -n "${{ inputs.month }}" ] && [ -n "${{ inputs.year }}" ]; then
          echo "üìÖ Sending report for specific month/year..."
          python manage.py enviar_reporte_mensual --mes ${{ inputs.month }} --a√±o ${{ inputs.year }} --send-email --send-whatsapp
        else
          echo "üìä Sending monthly report..."
          python manage.py enviar_reporte_mensual --send-email --send-whatsapp
        fi
        
    - name: Verify WhatsApp contacts
      run: |
        echo "üì± Verifying WhatsApp contacts..."
        python manage.py manage_whatsapp_contacts --list
        
    - name: Check maintenance status
      run: |
        echo "üîß Checking maintenance status..."
        python manage.py verificar_mantenimientos
        
    - name: Notify on success
      if: success()
      run: |
        echo "‚úÖ Monthly report sent successfully!"
        echo "üìä Report generated for: $(date)"
        
    - name: Notify on failure
      if: failure()
      run: |
        echo "‚ùå Error sending monthly report!"
        echo "üîç Check the logs above for details"
        
    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: report-logs-${{ github.run_number }}
        path: |
          *.log
          logs/
        retention-days: 30
